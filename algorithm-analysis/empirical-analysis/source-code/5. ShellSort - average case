#include <iostream>
#include <algorithm>
#include <utility>
#include <cstdlib>
#include <ctime>
#include <ratio>
#include <chrono>
#include <vector>
using namespace std::chrono;

void NhapNgauNhien(int*, int);
void ShellSort(int*, int);

int main()
{
	int n = 10;

	for (int i = 0; i < 50 * 10; i++)
	{
		if (i % 10 == 0 && i > 0)
			n = int(n * 1.3);
		int* array = new int[n];
		NhapNgauNhien(array, n);

		high_resolution_clock::time_point start = high_resolution_clock::now();
		ShellSort(array, n);
		duration<double> time_span = high_resolution_clock::now() - start;
		std::cout << n << "\t" << time_span.count() << std::endl;
		delete[] array;
	}

	return 0;
}

void NhapNgauNhien(int* array, int n)
{
	for (int i = 0; i < n; i++)
		array[i] = rand() % 100000;
}

void ShellSort(int* array, int n)
{
	for (int gap = n / 2; gap > 0; gap /= 2)
	{
		for (int i = gap; i < n; i++)
		{
			int temp = array[i];
			int j;
			for (j = i; j >= gap && array[j - gap] > temp; j -= gap)
				array[j] = array[j - gap];
			array[j] = temp;
		}
	}
}